<title>docs-test</title>
<meta attribute=filename type=string>
<meta attribute=hascomponent type=boolean as=hasComponent>
<meta attribute=status type=string default="pending">
<meta event=complete>

<template mode=closed>
	<div id=details>
		<div id=summary tabindex=-1 @click="event.preventDefault()">
			<test-status :status="$.status"></test-status>
			<p>{{ $.filename }}</p>
			<ui-button icon=pointer :iconstate="$.open ? 'up' : 'down'"
				.hidden="!$.loaded" @click="$.open = !$.open"></ui-button>
		</div>
		<div id=content .hidden="!$.open">
			<ui-code #if="$.hasComponent" language=yz>{{ $.component }}</ui-code>
			<ui-code language=js>{{ $.code }}</ui-code>
		</div>
	</div>
</template>

<script>
const content = query('#content')

live.link($.$loaded, () => {
	if($.code == null) return false
	if(!$.hasComponent) return true
	if($.component == null) return false
	return true
})

connected(() => effect(async () => {
	await until(customElements.whenDefined('docs-tests'))
	const path = this.parentNode.suitepath
	const response = await until(fetch(`${path}${$.filename}`))
	$.code = await until(response.text())
}))

connected(() => effect(async () => {
	if(!$.hasComponent) return
	await until(customElements.whenDefined('docs-tests'))
	const path = this.parentNode.suitepath
	const filename = $.filename.replace(/\.js$/, '.yz')
	const response = await until(fetch(`${path}${filename}`))
	$.component = await until(response.text())
}))

connected(() => effect(() => {
	if(!$.open) return
	content.style.setProperty('--height', content.scrollHeight)
}))
</script>

<style>
:host {
	display: block;
}
#details { padding: .5rem .75rem; }
#summary {
	list-style: none;
	display: flex;
	align-items: center; gap: .5rem;
	p {
		flex: 1;
		margin: 0;
	}
}
ui-button:hover { background-color: var(--background-color); }
#content {
	display: block;
	height: calc(var(--height, 0) * 1px);
	border-radius: 1rem;
	overflow: hidden;
	transition: height .2s;
	&[hidden]{ height: 0; }
}
ui-code {
	margin: 1rem 0 0;
/* 	background-color: var(--background-color); */
	&:not(:defined){ display: none; }
}
</style>
